/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme.stanar;

import domen.Fakultet;
import domen.Prenociste;
import domen.Referent;
import domen.Stanar;
import help.Helper;
import java.awt.Color;
import java.awt.event.KeyEvent;
import static java.lang.Integer.parseInt;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.border.Border;
import kontroler.Kontroler;

/**
 *
 * @author Bodin Todorovic
 */
public class FUnosStanara extends javax.swing.JPanel {

    Border border;
    Stanar trenutniStanar = new Stanar();

    /**
     * Creates new form FUnosStanara
     */
    public FUnosStanara() {
        initComponents();
        //setLocationRelativeTo(null);
        srediPolja();
        Stanar s = (Stanar) Helper.getInstance().get("s");
        if (s != null) {
            trenutniStanar = s;
            napuniCBFakulteti();
            prikazStanara(s);
            jbtnSacuvaj.setText("Izmeni");
            Helper.getInstance().remove("s");
            JOptionPane.showMessageDialog(this, "Prikaz izabranog stanara");

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCalendar1 = new com.toedter.calendar.JCalendar();
        jLabel1 = new javax.swing.JLabel();
        jtxtStanarID = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jtxtIme = new javax.swing.JTextField();
        jlblIme = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jtxtPrezime = new javax.swing.JTextField();
        jlblPrezime = new javax.swing.JLabel();
        jtxtImeRoditelja = new javax.swing.JTextField();
        jlblImeRoditelja = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jlblDatumRodjenja = new javax.swing.JLabel();
        jtxtDatumRodjenja = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jlblBrojSobe = new javax.swing.JLabel();
        jtxtBrojSobe = new javax.swing.JTextField();
        jtxtBlok = new javax.swing.JTextField();
        jlblBlok = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jlblGodinaUpisa = new javax.swing.JLabel();
        jlblFakultet = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jtxtReferent = new javax.swing.JTextField();
        jcalDatumRodjenja = new com.toedter.calendar.JCalendar();
        jycGodinaUpisa = new com.toedter.calendar.JYearChooser();
        jcomboFakultet = new javax.swing.JComboBox();
        jbtnSacuvaj = new javax.swing.JButton();
        jbtnObrisi = new javax.swing.JButton();

        jLabel1.setText("Stanar id:");

        jtxtStanarID.setEnabled(false);

        jLabel3.setText("Ime:");

        jtxtIme.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxtImeKeyTyped(evt);
            }
        });

        jlblIme.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jlblIme.setForeground(new java.awt.Color(255, 0, 0));
        jlblIme.setText("jLabel2");

        jLabel5.setText("Prezime:");

        jtxtPrezime.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxtPrezimeKeyTyped(evt);
            }
        });

        jlblPrezime.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jlblPrezime.setForeground(new java.awt.Color(255, 0, 0));
        jlblPrezime.setText("jLabel2");

        jtxtImeRoditelja.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxtImeRoditeljaKeyTyped(evt);
            }
        });

        jlblImeRoditelja.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jlblImeRoditelja.setForeground(new java.awt.Color(255, 0, 0));
        jlblImeRoditelja.setText("jLabel2");

        jLabel8.setText("Ime roditelja:");

        jLabel9.setText("Datum rodjenja:");

        jlblDatumRodjenja.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jlblDatumRodjenja.setForeground(new java.awt.Color(255, 0, 0));
        jlblDatumRodjenja.setText("jLabel2");

        jtxtDatumRodjenja.setEnabled(false);

        jLabel11.setText("Broj sobe:");

        jlblBrojSobe.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jlblBrojSobe.setForeground(new java.awt.Color(255, 0, 0));
        jlblBrojSobe.setText("jLabel2");

        jtxtBrojSobe.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxtBrojSobeKeyTyped(evt);
            }
        });

        jtxtBlok.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxtBlokKeyTyped(evt);
            }
        });

        jlblBlok.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jlblBlok.setForeground(new java.awt.Color(255, 0, 0));
        jlblBlok.setText("jLabel2");

        jLabel14.setText("Blok:");

        jLabel15.setText("Godina upisa:");

        jlblGodinaUpisa.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jlblGodinaUpisa.setForeground(new java.awt.Color(255, 0, 0));
        jlblGodinaUpisa.setText("jLabel2");

        jlblFakultet.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jlblFakultet.setForeground(new java.awt.Color(255, 0, 0));
        jlblFakultet.setText("jLabel2");

        jLabel18.setText("Fakultet:");

        jLabel20.setText("Referent:");

        jtxtReferent.setEnabled(false);

        jcomboFakultet.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jbtnSacuvaj.setText("Sacuvaj Stanara");
        jbtnSacuvaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSacuvajActionPerformed(evt);
            }
        });

        jbtnObrisi.setText("Obrisi");
        jbtnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnObrisiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(jLabel11)
                    .addComponent(jLabel14)
                    .addComponent(jLabel15)
                    .addComponent(jLabel18)
                    .addComponent(jLabel20))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jcalDatumRodjenja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtxtStanarID, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtxtIme, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlblIme)
                            .addComponent(jtxtPrezime, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlblPrezime)
                            .addComponent(jtxtImeRoditelja, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlblImeRoditelja)
                            .addComponent(jlblDatumRodjenja)
                            .addComponent(jtxtDatumRodjenja, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlblBrojSobe)
                            .addComponent(jtxtBrojSobe, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlblBlok)
                            .addComponent(jlblGodinaUpisa)
                            .addComponent(jlblFakultet)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jcomboFakultet, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jycGodinaUpisa, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jtxtBlok, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)))
                        .addGap(0, 192, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jtxtReferent, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jbtnObrisi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jbtnSacuvaj, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jtxtStanarID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jtxtIme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlblIme)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jtxtPrezime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlblPrezime)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jtxtImeRoditelja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlblImeRoditelja)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jtxtDatumRodjenja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlblDatumRodjenja)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jcalDatumRodjenja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jtxtBrojSobe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlblBrojSobe)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jtxtBlok, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlblBlok)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel15)
                    .addComponent(jycGodinaUpisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlblGodinaUpisa)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(jcomboFakultet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlblFakultet)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(jtxtReferent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtnSacuvaj))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtnObrisi)
                .addGap(61, 61, 61))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnSacuvajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnSacuvajActionPerformed
        try {
            // TODO add your handling code here:
            izvrsiValidaciju();
            int stanarID = Integer.parseInt(jtxtStanarID.getText().trim());
            String ime = jtxtIme.getText().trim();
            String prezime = jtxtPrezime.getText().trim();
            String imeRoditelja = jtxtImeRoditelja.getText().trim();
            int brojSobe;
            try {
                brojSobe = Integer.parseInt(jtxtBrojSobe.getText().trim());
            } catch (NumberFormatException ex) {
                System.out.println("forme.stanar.FUnosStanara - linija 318 - " + ex.getMessage());
                validacijaBrojSobe();
                return;
            }
            String Blok = jtxtBlok.getText().trim();
            Date datumRodjenja = jcalDatumRodjenja.getDate();
            int godinaUpisa = jycGodinaUpisa.getYear();
            Fakultet fakultet = (Fakultet) jcomboFakultet.getSelectedItem();
            Referent referent = Kontroler.getInstanca().vratiTrenutnogReferenta();

            Stanar stanar = new Stanar(stanarID, ime, prezime, imeRoditelja, brojSobe, Blok,
                    datumRodjenja, godinaUpisa, fakultet, referent);

            try {
//            izvrsiValidaciju(stanar);
                String poruka;
                if (jbtnSacuvaj.getText().equals("Sacuvaj Stanara")) {
                    poruka = Kontroler.getInstanca().sacuvajStanara(stanar);
                } else {
                    poruka = Kontroler.getInstanca().izmeniStanara(stanar);
                }
                jbtnSacuvaj.setEnabled(false);
                JOptionPane.showMessageDialog(this, poruka);
            } catch (Exception ex) {
                //Logger.getLogger(FUnosStanara.class.getName()).log(Level.SEVERE, null, ex);
                System.out.println("forme.stanar.FUnosStanara - linija 337 - " + ex.getMessage());
                JOptionPane.showMessageDialog(this, ex.getMessage());
            }
        } catch (Exception ex) {
//            Logger.getLogger(FUnosStanara.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("forme.stanar.FUnosStanara - linija 351 - " + ex.getMessage());
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }//GEN-LAST:event_jbtnSacuvajActionPerformed

    private void jtxtImeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtImeKeyTyped
        // TODO add your handling code here:
        jtxtIme.setBorder(border);//preporuka je da se stavi u jpanel, pa da se panelu menja border
        jlblIme.setVisible(false);
    }//GEN-LAST:event_jtxtImeKeyTyped

    private void jtxtPrezimeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtPrezimeKeyTyped
        // TODO add your handling code here:
        jtxtPrezime.setBorder(border);
        jlblPrezime.setVisible(false);
    }//GEN-LAST:event_jtxtPrezimeKeyTyped

    private void jtxtImeRoditeljaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtImeRoditeljaKeyTyped
        // TODO add your handling code here:
        jtxtImeRoditelja.setBorder(border);
        jlblImeRoditelja.setVisible(false);
    }//GEN-LAST:event_jtxtImeRoditeljaKeyTyped

    private void jtxtBrojSobeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtBrojSobeKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE))) {
            evt.consume();
            jtxtBrojSobe.setBorder(BorderFactory.createLineBorder(Color.RED));
            jlblBrojSobe.setText("*Mozete uneti samo brojeve u rasponu od 1 - 321");
            jlblBrojSobe.setVisible(true);
        } else {
            jtxtBrojSobe.setBorder(border);
            jlblBrojSobe.setVisible(false);
        }
    }//GEN-LAST:event_jtxtBrojSobeKeyTyped

    private void jtxtBlokKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtBlokKeyTyped
        // TODO add your handling code here:
        jtxtBlok.setBorder(border);
        jlblBlok.setVisible(false);
    }//GEN-LAST:event_jtxtBlokKeyTyped

    private void jbtnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnObrisiActionPerformed
        // TODO add your handling code here:
        Stanar stanar = trenutniStanar;
        try {
            boolean obrisan = Kontroler.getInstanca().obrisiStanara(stanar);
            if (obrisan) {
                jbtnObrisi.setEnabled(false);
                jbtnSacuvaj.setEnabled(false);
                JOptionPane.showMessageDialog(this, "Stanar uspesno obrisan");
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }//GEN-LAST:event_jbtnObrisiActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JCalendar jCalendar1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JButton jbtnObrisi;
    private javax.swing.JButton jbtnSacuvaj;
    private com.toedter.calendar.JCalendar jcalDatumRodjenja;
    private javax.swing.JComboBox jcomboFakultet;
    private javax.swing.JLabel jlblBlok;
    private javax.swing.JLabel jlblBrojSobe;
    private javax.swing.JLabel jlblDatumRodjenja;
    private javax.swing.JLabel jlblFakultet;
    private javax.swing.JLabel jlblGodinaUpisa;
    private javax.swing.JLabel jlblIme;
    private javax.swing.JLabel jlblImeRoditelja;
    private javax.swing.JLabel jlblPrezime;
    private javax.swing.JTextField jtxtBlok;
    private javax.swing.JTextField jtxtBrojSobe;
    private javax.swing.JTextField jtxtDatumRodjenja;
    private javax.swing.JTextField jtxtIme;
    private javax.swing.JTextField jtxtImeRoditelja;
    private javax.swing.JTextField jtxtPrezime;
    private javax.swing.JTextField jtxtReferent;
    private javax.swing.JTextField jtxtStanarID;
    private com.toedter.calendar.JYearChooser jycGodinaUpisa;
    // End of variables declaration//GEN-END:variables

    private void napuniCBFakulteti() {
        jcomboFakultet.removeAllItems();
        ArrayList<Fakultet> fakulteti;
        try {
            fakulteti = Kontroler.getInstanca().vratiFakultete();
        } catch (Exception ex) {
//            Logger.getLogger(FStanar.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("forme.stanar.FUnosStanara - linija 429 - " + ex.getMessage());
//            JOptionPane.showMessageDialog(this, ex.getMessage());
            fakulteti = new ArrayList<>();
        }
        for (Fakultet fakultet : fakulteti) {
            jcomboFakultet.addItem(fakultet);
        }
    }

    private boolean validacijaIme() {
        return daLiJePopunjeno(jtxtIme, jlblIme);
    }

    private boolean validacijaPrezime() {
        return daLiJePopunjeno(jtxtPrezime, jlblPrezime);
    }

    private boolean validacijaImeRoditelja() {
        return daLiJePopunjeno(jtxtImeRoditelja, jlblImeRoditelja);
    }

    private boolean validacijaBlok() {
        return daLiJePopunjeno(jtxtBlok, jlblBlok);
    }

    private boolean validacijaStarostStudenta() {
        Date datumRodjenja = jcalDatumRodjenja.getDate();
        Date danas = new Date();
        int razlika = danas.getYear() - datumRodjenja.getYear();
        if (razlika < 18) {
            jtxtDatumRodjenja.setBorder(BorderFactory.createLineBorder(Color.RED));
            jlblDatumRodjenja.setText("Donja granica za useljenje u dom je 18 godina.");
            jlblDatumRodjenja.setVisible(true);
            return false;
        }
        if (razlika > 35) {
            jtxtDatumRodjenja.setBorder(BorderFactory.createLineBorder(Color.RED));
            jlblDatumRodjenja.setText("Gornja granica godina za useljenje u dom je 35 godina.");
            jlblDatumRodjenja.setVisible(true);
            return false;
        }
        return true;
    }

    private boolean validacijaBrojSobe() {
        if (daLiJePopunjeno(jtxtBrojSobe, jlblBrojSobe)) {
            int brojSobe = parseInt(jtxtBrojSobe.getText());
            if (brojSobe > 321 || brojSobe < 1) {
                jtxtBrojSobe.setBorder(BorderFactory.createLineBorder(Color.RED));
                jlblBrojSobe.setText("*Mozete uneti samo brojeve u rasponu od 1 - 321");
                jlblBrojSobe.setVisible(true);
                return false;
            }
            return true;
        }
        return false;
    }

    private boolean validacijaFakultet() {
        if (jcomboFakultet.getSelectedItem() == null) {
            jcomboFakultet.setBorder(BorderFactory.createLineBorder(Color.RED));
            jlblFakultet.setText("Polje je obavezno");
            jlblFakultet.setVisible(true);
//            JOptionPane.showMessageDialog(this, "Konkcija sa serverom je izgubljena. Restartujte program i pokusajte ponovo.");
            return false;
        }
        return true;
    }

    private boolean validacijaBlokDoma() {
        String blok = jtxtBlok.getText().trim();
        if (blok.equalsIgnoreCase("A") || blok.equalsIgnoreCase("B")) {
            return true;
        } else {
            jtxtBlok.setBorder(BorderFactory.createLineBorder(Color.RED));
            jlblBlok.setText("Blok " + blok + " ne postoji.");
            jlblBlok.setVisible(true);
            return false;
        }
    }

    private boolean validacijaBrojMestaUSobi() {
        try {
            int brojSobe = Integer.parseInt(jtxtBrojSobe.getText().trim());
            String blok = jtxtBlok.getText().trim();
            List<Stanar> stanari = Kontroler.getInstanca().vratiStanare();
            int brojac = 0;
            for (Stanar stanar : stanari) {
                if (stanar.getBrojSobe() == brojSobe && stanar.getBlok().equalsIgnoreCase(blok)) {
                    if (stanar.getStanarID() == trenutniStanar.getStanarID() && jbtnSacuvaj.getText().equalsIgnoreCase("izmeni")) {
                        return true;
                    }
                    brojac++;
                }
            }
            if (brojac > 1) {
                jtxtBrojSobe.setBorder(BorderFactory.createLineBorder(Color.RED));
                jlblBrojSobe.setText("Soba " + brojSobe + " je popunjena, 2 stanara su vec useljena.");
                jlblBrojSobe.setVisible(true);
                return false;
            }
        } catch (Exception ex) {
            Logger.getLogger(FUnosStanara.class.getName()).log(Level.SEVERE, null, ex);
//            jtxtBrojSobe.setBorder(BorderFactory.createLineBorder(Color.RED));
//            jlblBrojSobe.setText("Doslo je do greske.");
//            jlblBrojSobe.setVisible(true);
        }
        return true;
    }

    private boolean daLiJePopunjeno(JTextField jtxtPolje, JLabel jlblLabela) {
        String sadrzaj = jtxtPolje.getText();
        if (sadrzaj.isEmpty()) {
            jtxtPolje.setBorder(BorderFactory.createLineBorder(Color.RED));
            jlblLabela.setText("Polje je obavezno");
            jlblLabela.setVisible(true);
            return false;
        } else {
            return true;
        }
    }

    private void izvrsiValidaciju() throws Exception {
        boolean validacijaIme = validacijaIme();
        boolean validacijaPrezime = validacijaPrezime();
        boolean validacijaImeRoditelja = validacijaImeRoditelja();
        boolean validacijaBlok = validacijaBlok();
        boolean validacijaBrojSobe = validacijaBrojSobe();
        boolean validacijaFakultet = validacijaFakultet();
        boolean validacijaBrojMestaUSobi = validacijaBrojMestaUSobi();
        boolean validacijaBlokDoma = validacijaBlokDoma();
        boolean validacijaStarostStudenta = validacijaStarostStudenta();

        /*System.out.println("Ime " + validacijaIme);
         System.out.println("Prezime " + validacijaPrezime);
         System.out.println("ImeRoditelja " + validacijaImeRoditelja);
         System.out.println("Blok " + validacijaBlok);
         System.out.println("BrojSobe " + validacijaBrojSobe);
         System.out.println("Fakultet " + validacijaFakultet);*/
        if (!(validacijaIme && validacijaPrezime && validacijaImeRoditelja && validacijaBlok && validacijaBrojSobe
                && validacijaFakultet && validacijaBrojMestaUSobi && validacijaBlokDoma && validacijaStarostStudenta)) {
            throw new Exception("Morate pravilno popuniti sva polja");
        }
    }

    private void postaviVidljivostiLabela() {
        jlblBrojSobe.setVisible(false);
        jlblIme.setVisible(false);
        jlblPrezime.setVisible(false);
        jlblImeRoditelja.setVisible(false);
        jlblDatumRodjenja.setVisible(false);
        jlblBlok.setVisible(false);
        jlblGodinaUpisa.setVisible(false);
        jlblFakultet.setVisible(false);
    }

    private void prikazStanara(Stanar s) {
        DateFormat sdf = new SimpleDateFormat("dd.MM.yyyy");
        //----------------------------------------
        try {
            Stanar stanar = Kontroler.getInstanca().vratiOdredjenogStanara(s);

            jtxtStanarID.setText(stanar.getStanarID() + "");
            jtxtIme.setText(stanar.getIme());
            jtxtPrezime.setText(stanar.getPrezime());
            jtxtImeRoditelja.setText(stanar.getImeRoditelja());
            jtxtDatumRodjenja.setText(sdf.format(stanar.getDatumRodjenja()));
            jtxtBrojSobe.setText(stanar.getBrojSobe() + "");
            jtxtBlok.setText(stanar.getBlok());
            jcomboFakultet.setSelectedItem(stanar.getFakultet());
            jycGodinaUpisa.setValue(stanar.getGodinaUpisa());
        } catch (Exception ex) {
            jtxtStanarID.setText(s.getStanarID() + "");
            jtxtIme.setText(s.getIme());
            jtxtPrezime.setText(s.getPrezime());
            jtxtImeRoditelja.setText(s.getImeRoditelja());
            jtxtDatumRodjenja.setText(sdf.format(s.getDatumRodjenja()));
            jtxtBrojSobe.setText(s.getBrojSobe() + "");
            jtxtBlok.setText(s.getBlok());
            jcomboFakultet.setSelectedItem(s.getFakultet());
            jycGodinaUpisa.setValue(s.getGodinaUpisa());
        }
        //----------------------------------------
//        jtxtStanarID.setText(s.getStanarID() + "");
//        jtxtIme.setText(s.getIme());
//        jtxtPrezime.setText(s.getPrezime());
//        jtxtImeRoditelja.setText(s.getImeRoditelja());
//        jtxtDatumRodjenja.setText(sdf.format(s.getDatumRodjenja()));
//        jtxtBrojSobe.setText(s.getBrojSobe() + "");
//        jtxtBlok.setText(s.getBlok());
//        jcomboFakultet.setSelectedItem(s.getFakultet());
//        jycGodinaUpisa.setValue(s.getGodinaUpisa());
    }

    private void srediPolja() {
        jtxtReferent.setText(Kontroler.getInstanca().vratiTrenutnogReferenta().toString());
//        int maxStanarID = Kontroler.getInstanca().vratiMaxStanarID();
        jtxtStanarID.setText("0"); //ovo prebaci da vuce max stanarID
        napuniCBFakulteti();
        border = jtxtReferent.getBorder();
        postaviVidljivostiLabela();
    }
}
